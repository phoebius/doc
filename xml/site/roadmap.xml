<?xml version="1.0" encoding="UTF-8"?>
<!--
 * ***********************************************************************************************
 *
 * Phoebius Framework
 *
 * **********************************************************************************************
 *
 * Copyright (c) 2009 phoebius.org
 *
 * All rights reserved.
 *
 *************************************************************************************************
-->

<!DOCTYPE document SYSTEM "../../dtd/document.dtd">

<document>
	<title> The Roadmap </title>
	<chapters>

		<chapter>
			<p>Phoebius framework in its current state already provides an innovative implementation
				of features-in-demand, but besides them we have a lot of other ideas for improving
				the product and extending the feature list.</p>
			
			<p> Near-future releases of 1.0 branch are intended to improve the existing codebase,
				fixing possible inconsistencies and providing more useful features across existing
				solution. Among them are: <ul>
					<li>new composite types for properties of ORM-related entities</li>
					<li>querying one-to-many and many-to-many associations</li>
					<li>more MVC views&#146; helpers</li>
					<li>logging inside autonomic build scripts</li>
					<li>implicit session handling</li>
					<li>API to handle incoming requests more precisely</li>
				</ul>
			</p>
			
			<p> At the same time we are planning a huge set of features based on Phoebius&#146;
				heart - an ORM module - that are intended to automate more day-to-day routines the
				developers need to code: <ul>
					<li>transparent entity caching</li>
					<li>querying composite types</li>
					<li>mapping of forms to ORM-related entities</li>
					<li>MVC filters</li>
					<li>AJAX integration and implicit intercommunication between client-side
						front-end and backend</li>
				</ul> We support a feature-centric development, forking a separate branch for each
				new feature, and then merging it back to master, so the upcoming releases are
				produced as soon as major features are signed off. </p>
		</chapter>
	</chapters>
</document>